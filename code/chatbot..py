from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import requests

# H√†m g·ªçi Ollama model Local (Gemma2)
def hoi_ollama(prompt):
    try:
        response = requests.post(  # S·ª≠a l·∫°i "port" th√†nh "post"
            "http://localhost:11434/api/generate",
            json={
                "model": "gemma2",
                "prompt": prompt,
                "stream": False
            }
        )
        data = response.json()
        return data.get("response", "ü§ñ Kh√¥ng c√≥ ph·∫£n h·ªìi.")
    except Exception as e:
        return f"‚ùå L·ªói khi g·ªçi Ollama: {e}"

# L·ªánh /start
async def bat_dau(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üë®‚Äçüç≥ Xin ch√†o! T√¥i l√† Chef. B·∫°n c·∫ßn t√¥i gi√∫p g√¨ trong nh√† b·∫øp?")

# Tr·∫£ l·ªùi m·ªçi tin nh·∫Øn m√† ng∆∞·ªùi d√πng g·ª≠i
async def tra_loi(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    ai_reply = hoi_ollama(user_message)
    await update.message.reply_text(ai_reply)

# Token t·ª´ BotFather
TOKEN = '7580452820:AAGs0QugQJ8DpW9_rWbjaMTtxlR1xF6mipk'  # (ƒë·ªïi n·∫øu public)

# Kh·ªüi t·∫°o bot v√† ch·∫°y
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", bat_dau))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), tra_loi))

    print("ü§ñ Bot ƒëang ch·∫°y...")
    app.run_polling()
