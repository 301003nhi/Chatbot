import asyncio
import requests
from thuc_don_Viet import goi_y_mon_an, lay_cong_thuc_mon_an
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# H√†m g·ªçi Ollama model Local (Gemma2)
def hoi_ollama(prompt):
    try:
        response = requests.post(
            "http://localhost:11434/api/generate",
            json={
                "model": "gemma2",
                "prompt": prompt,
                "stream": False
            }
        )
        data = response.json()
        return data.get("response", "ü§ñ Kh√¥ng c√≥ ph·∫£n h·ªìi.")
    except Exception as e:
        return f"‚ùå L·ªói khi g·ªçi Ollama: {e}"


# L·ªánh /start
async def bat_dau(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['history'] = []  # Reset l·ªãch s·ª≠ khi b·∫Øt ƒë·∫ßu
    await update.message.reply_text("üë®‚Äçüç≥ Xin ch√†o! T√¥i l√† Chef. B·∫°n c·∫ßn t√¥i gi√∫p g√¨ trong nh√† b·∫øp?")


# Tr·∫£ l·ªùi m·ªçi tin nh·∫Øn m√† ng∆∞·ªùi d√πng g·ª≠i
async def tra_loi(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text.lower()

    # N·∫øu l√† g·ª£i √Ω m√≥n ƒÉn
    if user_message.startswith("g·ª£i √Ω m√≥n"):
        nguyen_lieu = user_message.replace("g·ª£i √Ω m√≥n", "").strip().split(",")
        nguyen_lieu = [nl.strip() for nl in nguyen_lieu if nl.strip()]
        ai_reply = goi_y_mon_an(nguyen_lieu)
        await update.message.reply_text(ai_reply)
        return

    elif user_message.startswith("c√°ch l√†m m√≥n"):
        ten_mon = user_message.replace("c√°ch l√†m m√≥n", "").strip()
        ai_reply = lay_cong_thuc_mon_an(ten_mon)
        await update.message.reply_text(ai_reply)
        return

    # D√πng Ollama n·∫øu kh√¥ng ph·∫£i g·ª£i √Ω m√≥n
    else:
        context.user_data.setdefault('history', [])
        context.user_data.setdefault('history', [])
        context.user_data['history'].append(user_message)
        recent_history = context.user_data['history'][-5:]
        prompt = "\n".join(recent_history)
        ai_reply = await asyncio.to_thread(hoi_ollama, prompt)
        await update.message.reply_text(ai_reply)

# Token t·ª´ BotFather
#TOKEN = '7580452820:AAGs0QugQJ8DpW9_rWbjaMTtxlR1xF6mipk'
TOKEN = '7964158551:AAEN2Z9m6KNpK7DCQmVZtRPgbmVdGYQUt-I'

# Kh·ªüi t·∫°o bot v√† ch·∫°y
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", bat_dau))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), tra_loi))
    print("ü§ñ Bot ƒëang ch·∫°y...")
    app.run_polling()